/* Autogenerated file. Do not edit manually. */

package com.diegotobalina.framework.core.crud;

import com.diegotobalina.framework.core.exception.exception.EntityNotValidException;
import com.diegotobalina.framework.core.exception.exception.ForbiddenTenantException;
import com.diegotobalina.framework.core.multitenant.TenantContext;
import org.springframework.stereotype.Component;

import javax.persistence.*;

@Component
public class StaffitEntityListener {


    @PrePersist
    public void prePersist(StaffitEntity staffitEntity) throws EntityNotValidException {
        staffitEntity.checkIfCanBeInserted();
        staffitEntity.updateTenantId(TenantContext.getCurrentTenant());
    }

    @PreUpdate
    public void preUpdate(StaffitEntity staffitEntity) throws EntityNotValidException {
        staffitEntity.checkIfCanBeInserted();
    }

    @PreRemove
    public void preRemove(StaffitEntity staffitEntity) throws ForbiddenTenantException {
        validateTenant(staffitEntity);
    }

    @PostLoad
    public void postLoad(StaffitEntity staffitEntity) throws ForbiddenTenantException {
        validateTenant(staffitEntity);
    }

    @PostPersist
    public void postPersist(StaffitEntity staffitEntity) throws ForbiddenTenantException {
        validateTenant(staffitEntity);
    }

    @PostUpdate
    public void postUpdate(StaffitEntity staffitEntity) throws ForbiddenTenantException {
        validateTenant(staffitEntity);
    }

    @PostRemove
    public void postRemove(StaffitEntity staffitEntity) throws ForbiddenTenantException {
        validateTenant(staffitEntity);
    }

    private void validateTenant(StaffitEntity staffitEntity) throws ForbiddenTenantException {
        boolean isSameTenant = staffitEntity.isSameTenant(TenantContext.getCurrentTenant());
        if (!isSameTenant) throw new ForbiddenTenantException("Tenant mismatch");
    }
}

/* Autogenerated file. Do not edit manually. */

package com.diegotobalina.framework.core.crud;

import com.diegotobalina.framework.core.api.response.StyleEnum;
import com.diegotobalina.framework.core.util.ObjectUtils;
import lombok.SneakyThrows;
import org.apache.commons.lang3.NotImplementedException;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;

import java.util.List;

public interface StaffitMapper<E extends StaffitEntity, I extends StaffitInputDTO, B extends StaffitBaseOutputDTO, O extends B> {

    default E getEntityInstance() {
        throw new NotImplementedException("Missing @Override getInstance() method in Mapper");
    }


    default B getBaseOutputDTOInstance() {
        throw new NotImplementedException("Missing @Override getInstance() method in Mapper");
    }

    default O getOutputDTOInstance() {
        throw new NotImplementedException("Missing @Override getInstance() method in Mapper");
    }

    @SneakyThrows
    default E toEntity(I inputDTO) {
        E newInstance = getEntityInstance();
        ObjectUtils.copy(inputDTO, newInstance, new String[0]);
        return newInstance;
    }

    @SneakyThrows
    default B toBaseOutputDTO(E entity) {
        B newInstance = getBaseOutputDTOInstance();
        ObjectUtils.copy(entity, newInstance, new String[0]);
        return newInstance;
    }

    @SneakyThrows
    default O toO(E entity) {
        O newInstance = getOutputDTOInstance();
        ObjectUtils.copy(entity, newInstance, new String[0]);
        return newInstance;
    }

    default PageImpl<B> toBaseOutputDTOs(
            StyleEnum style, Pageable pageable, Page<E> entities) {
        List<B> exampleOS = toBaseOutputDTOs(style, entities);
        return new PageImpl<>(exampleOS, pageable, entities.getTotalElements());
    }

    default List<B> toBaseOutputDTOs(StyleEnum style, Page<E> staffitEntities) {
        return staffitEntities.getContent().stream()
                .map(staffitEntity -> toBaseOutputDTO(style, staffitEntity))
                .toList();
    }

    default B toBaseOutputDTO(StyleEnum style, E staffitEntity) {
        return style.equals(StyleEnum.BASE)
                ? toBaseOutputDTO(staffitEntity)
                : toO(staffitEntity);
    }

}

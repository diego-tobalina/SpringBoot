/* Autogenerated file. Do not edit manually. */

package com.diegotobalina.framework.core.crud;

import com.diegotobalina.framework.core.auditable.Auditable;
import com.diegotobalina.framework.core.crud.decorators.IUpdatable;
import com.diegotobalina.framework.core.crud.decorators.IValid;
import lombok.Getter;
import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.ParamDef;
import org.hibernate.envers.Audited;

import javax.persistence.*;

@Getter
@Audited
@MappedSuperclass
@FilterDef(
    name = "tenantFilter",
    parameters = {@ParamDef(name = "tenantId", type = "string")})
@Filter(name = "tenantFilter", condition = "tenant_id = :tenantId")
@EntityListeners({BaseEntityListener.class})
public abstract class BaseEntity extends Auditable<String> implements IValid, IUpdatable {

  @Id
  @GeneratedValue
  @Column(name = "id")
  protected Long id;

  @Column(name = "tenant_id")
  protected String tenantId;

  public void updateTenantId(String currentTenant) {
    this.tenantId = currentTenant;
  }

  public boolean isSameTenant(String tenantId) {
    if (this.tenantId == null) return false;
    return this.tenantId.equals(tenantId);
  }
}

/* Autogenerated file. Do not edit manually. */

package com.diegotobalina.framework.provided.multitenant.tenantdatasource.domain;

import com.diegotobalina.framework.provided.multitenant.tenantdatasource.infrastructure.controller.dto.input.TenantDataSourceInputDTO;
import com.diegotobalina.framework.provided.multitenant.tenantdatasource.infrastructure.controller.dto.output.BaseTenantDataSourceOutputDTO;
import com.diegotobalina.framework.provided.multitenant.tenantdatasource.infrastructure.controller.dto.output.TenantDataSourceOutputDTO;
import com.diegotobalina.framework.provided.responses.StyleEnum;
import org.mapstruct.Mapper;
import org.mapstruct.Mappings;
import org.mapstruct.factory.Mappers;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;

import java.util.List;

@Mapper
public interface TenantDataSourceMapper {

  TenantDataSourceMapper INSTANCE = Mappers.getMapper(TenantDataSourceMapper.class);

  @Mappings({})
  TenantDataSource toTenantDataSource(TenantDataSourceInputDTO tenantdatasourceInputDTO);

  @Mappings({})
  BaseTenantDataSourceOutputDTO toBaseTenantDataSourceOutputDTO(TenantDataSource tenantdatasource);

  @Mappings({})
  TenantDataSourceOutputDTO toTenantDataSourceOutputDTO(TenantDataSource tenantdatasource);

  default PageImpl<BaseTenantDataSourceOutputDTO> toTenantDataSourceOutputDTOS(
      StyleEnum style, Pageable pageable, Page<TenantDataSource> tenantdatasources) {
    List<BaseTenantDataSourceOutputDTO> tenantdatasourceOutputDTOS =
        toTenantDataSourceOutputDTOS(style, tenantdatasources);
    return new PageImpl<>(
        tenantdatasourceOutputDTOS, pageable, tenantdatasources.getTotalElements());
  }

  default List<BaseTenantDataSourceOutputDTO> toTenantDataSourceOutputDTOS(
      StyleEnum style, Page<TenantDataSource> tenantdatasources) {
    return tenantdatasources.getContent().stream()
        .map(tenantdatasource -> toTenantDataSourceOutputDTO(style, tenantdatasource))
        .toList();
  }

  default BaseTenantDataSourceOutputDTO toTenantDataSourceOutputDTO(
      StyleEnum style, TenantDataSource tenantdatasource) {
    return style.equals(StyleEnum.BASE)
        ? TenantDataSourceMapper.INSTANCE.toBaseTenantDataSourceOutputDTO(tenantdatasource)
        : TenantDataSourceMapper.INSTANCE.toTenantDataSourceOutputDTO(tenantdatasource);
  }
}
